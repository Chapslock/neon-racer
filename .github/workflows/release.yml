name: Build and Release NeonRacer

on:
  push:
    tags:
      - 'v*.*'  # Trigger on version tags like v1.0, v1.1, etc.
  workflow_dispatch:
    inputs:
      tag:
        description: "Select the tag to release"
        required: true
        type: string

permissions:
  contents: write

jobs:
  determine-tag:
    name: Determine release tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - name: output tag
        id: vars
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

  build-linux:
    name: Build Linux (Debian) App Image & Installer
    runs-on: ubuntu-latest
    needs: determine-tag
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ needs.determine-tag.outputs.tag }}
          fetch-depth: 0

      - name: Set up JDK 24
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 24

      - name: Build Linux App and Installer
        run: ./gradlew jPackageAll

      - name: Create GitHub Release (Linux)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.determine-tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.determine-tag.outputs.tag }}
          files: |
            app/build/jpackage/neon-racer-*.deb
            app/build/jpackage/neon-racer-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux-fedora:
    name: Build Linux (Fedora) Installer
    runs-on: ubuntu-latest
    container: fedora:latest
    needs: [determine-tag, build-linux]
    steps:
      - name: Install dependencies
        run: |
          dnf install -y java-24-openjdk-devel java-24-openjdk-jmods rpm-build git
          export JAVA_HOME=/usr/lib/jvm/java-24-openjdk
          export PATH=$JAVA_HOME/bin:$PATH

      - uses: actions/checkout@v5
        with:
          ref: ${{ needs.determine-tag.outputs.tag }}
          fetch-depth: 0

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build Fedora Installer
        run: |
          export JAVA_HOME=/usr/lib/jvm/java-24-openjdk
          export PATH=$JAVA_HOME/bin:$PATH
          ./gradlew jPackageAll

      - name: Upload Fedora Artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.determine-tag.outputs.tag }}
          files: |
            app/build/jpackage/neon-racer-*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    name: Build Windows App & Installer
    runs-on: windows-latest
    needs: [determine-tag, build-linux]
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ needs.determine-tag.outputs.tag }}
          fetch-depth: 0

      - name: Set up JDK 24
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 24

      - name: Build Windows App and Installer
        run: ./gradlew jPackageAll

      - name: Upload Windows Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.determine-tag.outputs.tag }}
          files: |
            app/build/jpackage/neon-racer-*.exe
            app/build/jpackage/neon-racer-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build macOS App & Installer
    runs-on: macos-latest
    needs: [determine-tag, build-linux]
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ needs.determine-tag.outputs.tag }}
          fetch-depth: 0

      - name: Set up JDK 24
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 24

      - name: Build macOS App and Installer
        run: ./gradlew jPackageAll

      - name: Upload macOS Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.determine-tag.outputs.tag }}
          files: |
            app/build/jpackage/neon-racer-*.dmg
            app/build/jpackage/neon-racer-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
